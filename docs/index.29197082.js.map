{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,E,SCaA,MAAM,EAAW,SAAS,cAAc,CAAC,aACnC,EAAW,SAAS,cAAc,CAAC,SACnC,EAAgB,SAAS,cAAc,CAAC,eAU9C,eAAe,IACb,EAAS,SAAS,CAAG,GAGrB,AADsB,CAAA,MAAM,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAA,EAAC,CAAG,SAAnD,EACc,OAAO,CAAC,AAAC,IACrB,IAAI,EAAW,EAAI,IAAI,GACvB,EAAkB,EAAI,EAAE,CAAE,EAAS,KAAK,CAAE,EAAS,MAAM,CAAE,EAAS,KAAK,CAC3E,EACF,CAGA,SAAS,EAAkB,CAAE,CAAE,CAAK,CAAE,CAAM,CAAE,CAAK,EACjD,IAAI,EAAK,SAAS,aAAa,CAAC,KAChC,CAAA,EAAG,OAAO,CAAC,EAAE,CAAG,EAGhB,IAAI,EAAc,SAAS,aAAa,CAAC,OACzC,EAAY,SAAS,CAAC,GAAG,CAAC,gBAG1B,IAAI,EAAe,SAAS,aAAa,CAAC,IAC1C,CAAA,EAAa,WAAW,CAAG,CAAC,UAAG,EAAE,EAAA,CAAO,CACxC,EAAa,SAAS,CAAC,GAAG,CAAC,cAG3B,IAAI,EAAgB,SAAS,aAAa,CAAC,IAC3C,CAAA,EAAc,WAAW,CAAG,CAAC,iBAAG,EAAE,EAAA,CAAQ,CAG1C,IAAI,EAAe,SAAS,aAAa,CAAC,IAC1C,CAAA,EAAa,WAAW,CAAG,CAAC,UAAG,EAAE,EAAA,CAAO,CAGxC,IAAI,EAAa,SAAS,aAAa,CAAC,SACxC,CAAA,EAAW,WAAW,CAAG,UACzB,EAAW,SAAS,CAAC,GAAG,CAAC,QACzB,EAAW,gBAAgB,CAAC,QAAS,SAwDjC,EACA,EACA,SAXJ,AA9CW,EA8CR,SAAS,CAAG;AACoC,qDAAA,EA/ChC,EA+C2C;AACV,sDAAA,EAhD1B,EAgDsC;AACb,qDAAA,EAjDjB,EAiD4B;AAChE;AACA;AACA,IAAI,CAAC,CAGC,EAAgB,AAvDT,EAuDY,aAAa,CAAC,eACjC,EAAiB,AAxDV,EAwDa,aAAa,CAAC,gBAClC,EAAgB,AAzDT,EAyDY,aAAa,CAAC,oBAGrC,AA5DW,EA4DR,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,UAClD,IAAI,EAAW,EAAc,KAAK,CAC9B,EAAY,EAAe,KAAK,CAChC,EAAW,EAAc,KAAK,AAElC,OAAM,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,EAAI,EAAA,EAAC,CAAG,QAjEX,GAiEyB,CACpC,MAAO,EACP,OAAQ,EACR,MAAO,CACT,GAEA,EAvEa,EAuES,EAAU,EAAW,GAC3C,AAxES,EAwEN,MAAM,EACX,GAGA,AA5EW,EA4ER,aAAa,CAAC,WAAW,gBAAgB,CAAC,QAAS,KACpD,EA7Ea,EAAI,EAAO,EAAQ,GA8EhC,AA9ES,EA8EN,MAAM,EACX,MA3EA,IAAI,EAAe,SAAS,aAAa,CAAC,SAC1C,CAAA,EAAa,WAAW,CAAG,sBAC3B,EAAa,SAAS,CAAC,GAAG,CAAC,UAC3B,EAAa,gBAAgB,CAAC,QAAS,IAAM,EAAW,IAGxD,EAAY,WAAW,CAAC,GACxB,EAAY,WAAW,CAAC,GACxB,EAAY,WAAW,CAAC,GACxB,EAAG,WAAW,CAAC,GACf,EAAG,WAAW,CAAC,GACf,EAAG,WAAW,CAAC,GACf,EAAS,WAAW,CAAC,EACvB,CAsBA,eAAe,EAAW,CAAE,EAC1B,MAAM,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,EAAI,EAAA,EAAC,CAAG,QAAS,IACjC,SAAS,aAAa,CAAC,CAAC,UAAU,EAAE,EAAG,EAAE,CAAC,EAAE,MAAM,EACpD,CAtFA,AAAA,CAAA,EAAA,EAAA,kBAAiB,AAAjB,EAAmB,EAAA,IAAG,CAAG,AAAC,IACnB,GACH,CAAA,OAAO,QAAQ,CAAC,IAAI,CAAG,YAAA,CAE3B,GA4DA,EAAS,gBAAgB,CAAC,SAAU,MAAO,IACzC,EAAE,cAAc,GAEhB,IAAI,EAAQ,SAAS,cAAc,CAAC,SAAS,KAAK,CAC9C,EAAS,SAAS,cAAc,CAAC,UAAU,KAAK,CAChD,EAAQ,SAAS,cAAc,CAAC,SAAS,KAAK,CAQlD,EAAkB,AANL,CAAA,MAAM,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAA,EAAC,CAAG,SAAU,CACjD,MAAA,EACA,OAAA,EACA,MAAA,CACF,EAAA,EAEyB,EAAE,CAAE,EAAO,EAAQ,GAE5C,EAAS,KAAK,EAChB,GA+CA,EAAc,gBAAgB,CAAC,QAAS,KACtC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,EAAA,IAAG,EACR,IAAI,CAAC,KACJ,aAAa,UAAU,CAAC,QACxB,OAAO,QAAQ,CAAC,IAAI,CAAG,YACzB,GACC,KAAK,CAAC,AAAC,IACN,QAAQ,KAAK,CAAC,iBAAkB,EAClC,EACJ,GAGA,OAAO,gBAAgB,CAAC,mBAAoB","sources":["<anon>","assets/js/tasks.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $47Mwn = parcelRequire(\"47Mwn\");\n\nvar $ilpIi = parcelRequire(\"ilpIi\");\n\nvar $6AR8M = parcelRequire(\"6AR8M\");\n// References to HTML elements\nconst $72d06b47481e540a$var$bookForm = document.getElementById(\"book-form\");\nconst $72d06b47481e540a$var$bookList = document.getElementById(\"books\");\nconst $72d06b47481e540a$var$signOutButton = document.getElementById(\"signOutBttn\");\n// Ensure user is authenticated\n(0, $6AR8M.onAuthStateChanged)((0, $47Mwn.auth), (user)=>{\n    if (!user) window.location.href = \"login.html\"; // Redirect if not logged in\n});\n// Function to Render Books from Firestore\nasync function $72d06b47481e540a$var$renderBooks() {\n    $72d06b47481e540a$var$bookList.innerHTML = \"\"; // Clear existing books\n    const querySnapshot = await (0, $ilpIi.getDocs)((0, $ilpIi.collection)((0, $47Mwn.db), \"books\"));\n    querySnapshot.forEach((doc)=>{\n        let bookData = doc.data();\n        $72d06b47481e540a$var$createBookElement(doc.id, bookData.title, bookData.author, bookData.genre);\n    });\n}\n// Function to Create Book Element in the List\nfunction $72d06b47481e540a$var$createBookElement(id, title, author, genre) {\n    let li = document.createElement(\"li\");\n    li.dataset.id = id;\n    // Book details container\n    let bookDetails = document.createElement(\"div\");\n    bookDetails.classList.add(\"book-details\");\n    // Title\n    let titleElement = document.createElement(\"p\");\n    titleElement.textContent = `\\u{1F4D6} ${title}`;\n    titleElement.classList.add(\"book-title\");\n    // Author\n    let authorElement = document.createElement(\"p\");\n    authorElement.textContent = `\\u{270D}\\u{FE0F} ${author}`;\n    // Genre\n    let genreElement = document.createElement(\"p\");\n    genreElement.textContent = `\\u{1F4DA} ${genre}`;\n    // Edit Button\n    let editButton = document.createElement(\"button\");\n    editButton.textContent = \"\\u270F\\uFE0F Edit\";\n    editButton.classList.add(\"edit\");\n    editButton.addEventListener(\"click\", ()=>$72d06b47481e540a$var$editBook(li, id, title, author, genre));\n    // Delete Button\n    let deleteButton = document.createElement(\"button\");\n    deleteButton.textContent = \"\\uD83D\\uDDD1 Delete\";\n    deleteButton.classList.add(\"delete\");\n    deleteButton.addEventListener(\"click\", ()=>$72d06b47481e540a$var$deleteBook(id));\n    // Append elements\n    bookDetails.appendChild(titleElement);\n    bookDetails.appendChild(authorElement);\n    bookDetails.appendChild(genreElement);\n    li.appendChild(bookDetails);\n    li.appendChild(editButton);\n    li.appendChild(deleteButton);\n    $72d06b47481e540a$var$bookList.appendChild(li);\n}\n// Function to Add a New Book\n$72d06b47481e540a$var$bookForm.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    let title = document.getElementById(\"title\").value;\n    let author = document.getElementById(\"author\").value;\n    let genre = document.getElementById(\"genre\").value;\n    let docRef = await (0, $ilpIi.addDoc)((0, $ilpIi.collection)((0, $47Mwn.db), \"books\"), {\n        title: title,\n        author: author,\n        genre: genre\n    });\n    $72d06b47481e540a$var$createBookElement(docRef.id, title, author, genre);\n    $72d06b47481e540a$var$bookForm.reset(); // Clear form after submission\n});\n// Function to Delete a Book\nasync function $72d06b47481e540a$var$deleteBook(id) {\n    await (0, $ilpIi.deleteDoc)((0, $ilpIi.doc)((0, $47Mwn.db), \"books\", id));\n    document.querySelector(`[data-id='${id}']`).remove();\n}\n// Function to Edit a Book\nfunction $72d06b47481e540a$var$editBook(li, id, oldTitle, oldAuthor, oldGenre) {\n    li.innerHTML = `\n        <input type=\"text\" class=\"edit-title\" value=\"${oldTitle}\">\n        <input type=\"text\" class=\"edit-author\" value=\"${oldAuthor}\">\n        <input type=\"text\" class=\"edit-genre\" value=\"${oldGenre}\">\n        <button class=\"save\">\\u{1F4BE} Save</button>\n        <button class=\"cancel\">\\u{274C} Cancel</button>\n    `;\n    // Get new input fields\n    let newTitleInput = li.querySelector(\".edit-title\");\n    let newAuthorInput = li.querySelector(\".edit-author\");\n    let newGenreInput = li.querySelector(\".edit-genre\");\n    // Save Button Functionality\n    li.querySelector(\".save\").addEventListener(\"click\", async ()=>{\n        let newTitle = newTitleInput.value;\n        let newAuthor = newAuthorInput.value;\n        let newGenre = newGenreInput.value;\n        await (0, $ilpIi.updateDoc)((0, $ilpIi.doc)((0, $47Mwn.db), \"books\", id), {\n            title: newTitle,\n            author: newAuthor,\n            genre: newGenre\n        });\n        $72d06b47481e540a$var$createBookElement(id, newTitle, newAuthor, newGenre);\n        li.remove();\n    });\n    // Cancel Button Functionality\n    li.querySelector(\".cancel\").addEventListener(\"click\", ()=>{\n        $72d06b47481e540a$var$createBookElement(id, oldTitle, oldAuthor, oldGenre);\n        li.remove();\n    });\n}\n// Sign Out Function\n$72d06b47481e540a$var$signOutButton.addEventListener(\"click\", ()=>{\n    (0, $6AR8M.signOut)((0, $47Mwn.auth)).then(()=>{\n        localStorage.removeItem(\"user\");\n        window.location.href = \"login.html\";\n    }).catch((error)=>{\n        console.error(\"Sign Out Error\", error);\n    });\n});\n// Load books when the page loads\nwindow.addEventListener(\"DOMContentLoaded\", $72d06b47481e540a$var$renderBooks);\n\n\n//# sourceMappingURL=index.29197082.js.map\n","import { db } from \"./firebase.js\";\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  deleteDoc,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { auth } from \"./firebase.js\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\n\n// References to HTML elements\nconst bookForm = document.getElementById(\"book-form\");\nconst bookList = document.getElementById(\"books\");\nconst signOutButton = document.getElementById(\"signOutBttn\");\n\n// Ensure user is authenticated\nonAuthStateChanged(auth, (user) => {\n  if (!user) {\n    window.location.href = \"login.html\"; // Redirect if not logged in\n  }\n});\n\n// Function to Render Books from Firestore\nasync function renderBooks() {\n  bookList.innerHTML = \"\"; // Clear existing books\n\n  const querySnapshot = await getDocs(collection(db, \"books\"));\n  querySnapshot.forEach((doc) => {\n    let bookData = doc.data();\n    createBookElement(doc.id, bookData.title, bookData.author, bookData.genre);\n  });\n}\n\n// Function to Create Book Element in the List\nfunction createBookElement(id, title, author, genre) {\n  let li = document.createElement(\"li\");\n  li.dataset.id = id;\n\n  // Book details container\n  let bookDetails = document.createElement(\"div\");\n  bookDetails.classList.add(\"book-details\");\n\n  // Title\n  let titleElement = document.createElement(\"p\");\n  titleElement.textContent = `📖 ${title}`;\n  titleElement.classList.add(\"book-title\");\n\n  // Author\n  let authorElement = document.createElement(\"p\");\n  authorElement.textContent = `✍️ ${author}`;\n\n  // Genre\n  let genreElement = document.createElement(\"p\");\n  genreElement.textContent = `📚 ${genre}`;\n\n  // Edit Button\n  let editButton = document.createElement(\"button\");\n  editButton.textContent = \"✏️ Edit\";\n  editButton.classList.add(\"edit\");\n  editButton.addEventListener(\"click\", () =>\n    editBook(li, id, title, author, genre)\n  );\n\n  // Delete Button\n  let deleteButton = document.createElement(\"button\");\n  deleteButton.textContent = \"🗑 Delete\";\n  deleteButton.classList.add(\"delete\");\n  deleteButton.addEventListener(\"click\", () => deleteBook(id));\n\n  // Append elements\n  bookDetails.appendChild(titleElement);\n  bookDetails.appendChild(authorElement);\n  bookDetails.appendChild(genreElement);\n  li.appendChild(bookDetails);\n  li.appendChild(editButton);\n  li.appendChild(deleteButton);\n  bookList.appendChild(li);\n}\n\n// Function to Add a New Book\nbookForm.addEventListener(\"submit\", async (e) => {\n  e.preventDefault();\n\n  let title = document.getElementById(\"title\").value;\n  let author = document.getElementById(\"author\").value;\n  let genre = document.getElementById(\"genre\").value;\n\n  let docRef = await addDoc(collection(db, \"books\"), {\n    title,\n    author,\n    genre,\n  });\n\n  createBookElement(docRef.id, title, author, genre);\n\n  bookForm.reset(); // Clear form after submission\n});\n\n// Function to Delete a Book\nasync function deleteBook(id) {\n  await deleteDoc(doc(db, \"books\", id));\n  document.querySelector(`[data-id='${id}']`).remove();\n}\n\n// Function to Edit a Book\nfunction editBook(li, id, oldTitle, oldAuthor, oldGenre) {\n  li.innerHTML = `\n        <input type=\"text\" class=\"edit-title\" value=\"${oldTitle}\">\n        <input type=\"text\" class=\"edit-author\" value=\"${oldAuthor}\">\n        <input type=\"text\" class=\"edit-genre\" value=\"${oldGenre}\">\n        <button class=\"save\">💾 Save</button>\n        <button class=\"cancel\">❌ Cancel</button>\n    `;\n\n  // Get new input fields\n  let newTitleInput = li.querySelector(\".edit-title\");\n  let newAuthorInput = li.querySelector(\".edit-author\");\n  let newGenreInput = li.querySelector(\".edit-genre\");\n\n  // Save Button Functionality\n  li.querySelector(\".save\").addEventListener(\"click\", async () => {\n    let newTitle = newTitleInput.value;\n    let newAuthor = newAuthorInput.value;\n    let newGenre = newGenreInput.value;\n\n    await updateDoc(doc(db, \"books\", id), {\n      title: newTitle,\n      author: newAuthor,\n      genre: newGenre,\n    });\n\n    createBookElement(id, newTitle, newAuthor, newGenre);\n    li.remove();\n  });\n\n  // Cancel Button Functionality\n  li.querySelector(\".cancel\").addEventListener(\"click\", () => {\n    createBookElement(id, oldTitle, oldAuthor, oldGenre);\n    li.remove();\n  });\n}\n\n// Sign Out Function\nsignOutButton.addEventListener(\"click\", () => {\n  signOut(auth)\n    .then(() => {\n      localStorage.removeItem(\"user\");\n      window.location.href = \"login.html\";\n    })\n    .catch((error) => {\n      console.error(\"Sign Out Error\", error);\n    });\n});\n\n// Load books when the page loads\nwindow.addEventListener(\"DOMContentLoaded\", renderBooks);\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$47Mwn","$ilpIi","$6AR8M","$72d06b47481e540a$var$bookForm","document","getElementById","$72d06b47481e540a$var$bookList","$72d06b47481e540a$var$signOutButton","$72d06b47481e540a$var$renderBooks","innerHTML","querySnapshot","getDocs","collection","db","forEach","doc","bookData","data","$72d06b47481e540a$var$createBookElement","title","author","genre","li","createElement","dataset","bookDetails","classList","add","titleElement","textContent","authorElement","genreElement","editButton","addEventListener","newTitleInput","newAuthorInput","newGenreInput","querySelector","newTitle","value","newAuthor","newGenre","updateDoc","remove","deleteButton","$72d06b47481e540a$var$deleteBook","appendChild","deleteDoc","onAuthStateChanged","auth","user","window","location","href","e","preventDefault","docRef","addDoc","reset","signOut","then","localStorage","removeItem","catch","error","console"],"version":3,"file":"index.29197082.js.map"}